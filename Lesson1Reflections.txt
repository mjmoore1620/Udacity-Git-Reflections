How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    Diff reduced the overall text and decreased the time I spent scanning the document.
	
How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    Mistakes will inevitably be made and a history allows for a safety net.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Cons: the programmer might not make a commit too small or too big or not make a useful commit message
	Pros: Creating a commit creates a milestone with a message that is more useful that just a continuous save history

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Git allows for easier management of files with inter-relations, as commonly
    found in programming.

How can you use the commands git log and git diff to view the history of files?

    'git log' shows the history of commits with a commit message, who made the commit, the id, and the number of insertions and deletions optionally.
    'git diff' shows what the specific changes were between two files versions.

How might using version control make you more confident to make changes that
could break something?

    Knowing that there's a history with a detailed log and that I can navigate it and not break everything or lose track of the most recent version allows for more drastic edits to isolate bugs.

Now that you have your workspace set up, what do you want to try using Git for?

    A sudoku solving program that I want to port to a different language or framework unless I come up with a more interesting new project.