What happens when you initialize a repository? Why do you need to do it?
    
    It creates a hidden folder: .git. This creates the files necessary to track the meta-data that git tracks. 

How is the staging area different from the working directory and the repository? What value do you think it offers?

    The staging area is a temporary space to see which files will be affected by a commit. The pwd and repo probably contain files that won't be affected by committing current changes. 
    The staging area allows for seperation of concerns.

How can you use the staging area to make sure you have one commit per logical change?

    Try to have one file in the staging area for each commit. More than one file change suggests more than one logical change most of the time.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?

    Branches would be useful for experimental or alternate features. Branching helps keep a master version intact to keep a current working version.

How do the diagrams help you visualize the branch structure?

    It shows whats available from the perspective of a given commit, and also clearly shows the order.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

    Both branches have the same HEAD with changes from both. Changes that conflict prevent the merge until resolved or bypassed. The diagram shows the history in a human readable way.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?

    Pros: It can combine files and changes for the user and doesn't overstep it's bounds with conflicts
    Cons: It can't make inferences needed to resolve all conflicts. 

